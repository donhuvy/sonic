// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

package avx2

import (
	`github.com/bytedance/sonic/loader`
)

var Stubs = []loader.GoC{
    {"_f32toa", &_subr__f32toa, &__f32toa},
    {"_f64toa", &_subr__f64toa, &__f64toa},
    {"_fsm_exec", &_subr__fsm_exec, &__fsm_exec},
    {"_get_by_path", &_subr__get_by_path, &__get_by_path},
    {"_html_escape", &_subr__html_escape, &__html_escape},
    {"_i64toa", &_subr__i64toa, &__i64toa},
    {"_lspace", &_subr__lspace, &__lspace},
    {"_quote", &_subr__quote, &__quote},
    {"_skip_array", &_subr__skip_array, &__skip_array},
    {"_skip_number", &_subr__skip_number, &__skip_number},
    {"_skip_object", &_subr__skip_object, &__skip_object},
    {"_skip_one", &_subr__skip_one, &__skip_one},
    {"_skip_one_fast", &_subr__skip_one_fast, &__skip_one_fast},
    {"_u64toa", &_subr__u64toa, &__u64toa},
    {"_unquote", &_subr__unquote, &__unquote},
    {"_validate_one", &_subr__validate_one, &__validate_one},
    {"_validate_utf8", &_subr__validate_utf8, &__validate_utf8},
    {"_validate_utf8_fast", &_subr__validate_utf8_fast, &__validate_utf8_fast},
    {"_value", &_subr__value, &__value},
    {"_vnumber", &_subr__vnumber, &__vnumber},
    {"_vsigned", &_subr__vsigned, &__vsigned},
    {"_vstring", &_subr__vstring, &__vstring},
    {"_vunsigned", &_subr__vunsigned, &__vunsigned},
}

var Funcs = []loader.CFunc{
    {"__native_entry__", 0, 67, 0, nil},
    {"_f32toa", _entry__f32toa, _size__f32toa, _stack__f32toa, _pcsp__f32toa},
    {"_f64toa", _entry__f64toa, _size__f64toa, _stack__f64toa, _pcsp__f64toa},
    {"_format_significand", _entry__format_significand, _size__format_significand, _stack__format_significand, _pcsp__format_significand},
    {"_format_integer", _entry__format_integer, _size__format_integer, _stack__format_integer, _pcsp__format_integer},
    {"_fsm_exec", _entry__fsm_exec, _size__fsm_exec, _stack__fsm_exec, _pcsp__fsm_exec},
    {"_advance_string", _entry__advance_string, _size__advance_string, _stack__advance_string, _pcsp__advance_string},
    {"_advance_string_default", _entry__advance_string_default, _size__advance_string_default, _stack__advance_string_default, _pcsp__advance_string_default},
    {"_do_skip_number", _entry__do_skip_number, _size__do_skip_number, _stack__do_skip_number, _pcsp__do_skip_number},
    {"_get_by_path", _entry__get_by_path, _size__get_by_path, _stack__get_by_path, _pcsp__get_by_path},
    {"_skip_one_fast", _entry__skip_one_fast, _size__skip_one_fast, _stack__skip_one_fast, _pcsp__skip_one_fast},
    {"_html_escape", _entry__html_escape, _size__html_escape, _stack__html_escape, _pcsp__html_escape},
    {"_i64toa", _entry__i64toa, _size__i64toa, _stack__i64toa, _pcsp__i64toa},
    {"_u64toa", _entry__u64toa, _size__u64toa, _stack__u64toa, _pcsp__u64toa},
    {"_lspace", _entry__lspace, _size__lspace, _stack__lspace, _pcsp__lspace},
    {"_quote", _entry__quote, _size__quote, _stack__quote, _pcsp__quote},
    {"_skip_array", _entry__skip_array, _size__skip_array, _stack__skip_array, _pcsp__skip_array},
    {"_skip_number", _entry__skip_number, _size__skip_number, _stack__skip_number, _pcsp__skip_number},
    {"_skip_object", _entry__skip_object, _size__skip_object, _stack__skip_object, _pcsp__skip_object},
    {"_skip_one", _entry__skip_one, _size__skip_one, _stack__skip_one, _pcsp__skip_one},
    {"_unquote", _entry__unquote, _size__unquote, _stack__unquote, _pcsp__unquote},
    {"_validate_one", _entry__validate_one, _size__validate_one, _stack__validate_one, _pcsp__validate_one},
    {"_validate_utf8", _entry__validate_utf8, _size__validate_utf8, _stack__validate_utf8, _pcsp__validate_utf8},
    {"_validate_utf8_fast", _entry__validate_utf8_fast, _size__validate_utf8_fast, _stack__validate_utf8_fast, _pcsp__validate_utf8_fast},
    {"_value", _entry__value, _size__value, _stack__value, _pcsp__value},
    {"_vnumber", _entry__vnumber, _size__vnumber, _stack__vnumber, _pcsp__vnumber},
    {"_atof_eisel_lemire64", _entry__atof_eisel_lemire64, _size__atof_eisel_lemire64, _stack__atof_eisel_lemire64, _pcsp__atof_eisel_lemire64},
    {"_atof_native", _entry__atof_native, _size__atof_native, _stack__atof_native, _pcsp__atof_native},
    {"_decimal_to_f64", _entry__decimal_to_f64, _size__decimal_to_f64, _stack__decimal_to_f64, _pcsp__decimal_to_f64},
    {"_right_shift", _entry__right_shift, _size__right_shift, _stack__right_shift, _pcsp__right_shift},
    {"_left_shift", _entry__left_shift, _size__left_shift, _stack__left_shift, _pcsp__left_shift},
    {"_vsigned", _entry__vsigned, _size__vsigned, _stack__vsigned, _pcsp__vsigned},
    {"_vstring", _entry__vstring, _size__vstring, _stack__vstring, _pcsp__vstring},
    {"_vunsigned", _entry__vunsigned, _size__vunsigned, _stack__vunsigned, _pcsp__vunsigned},
}

var (
    _subr__f32toa             uintptr
    _subr__f64toa             uintptr
    _subr__fsm_exec           uintptr
    _subr__get_by_path        uintptr
    _subr__html_escape        uintptr
    _subr__i64toa             uintptr
    _subr__lspace             uintptr
    _subr__quote              uintptr
    _subr__skip_array         uintptr
    _subr__skip_number        uintptr
    _subr__skip_object        uintptr
    _subr__skip_one           uintptr
    _subr__skip_one_fast      uintptr
    _subr__u64toa             uintptr
    _subr__unquote            uintptr
    _subr__validate_one       uintptr
    _subr__validate_utf8      uintptr
    _subr__validate_utf8_fast uintptr
    _subr__value              uintptr
    _subr__vnumber            uintptr
    _subr__vsigned            uintptr
    _subr__vstring            uintptr
    _subr__vunsigned          uintptr
)

const (
    _stack__f32toa = 48
    _stack__f64toa = 80
    _stack__format_significand = 24
    _stack__format_integer = 16
    _stack__fsm_exec = 144
    _stack__advance_string = 56
    _stack__advance_string_default = 48
    _stack__do_skip_number = 48
    _stack__get_by_path = 264
    _stack__skip_one_fast = 176
    _stack__html_escape = 72
    _stack__i64toa = 16
    _stack__u64toa = 8
    _stack__lspace = 8
    _stack__quote = 56
    _stack__skip_array = 152
    _stack__skip_number = 88
    _stack__skip_object = 152
    _stack__skip_one = 152
    _stack__unquote = 72
    _stack__validate_one = 152
    _stack__validate_utf8 = 48
    _stack__validate_utf8_fast = 176
    _stack__value = 328
    _stack__vnumber = 240
    _stack__atof_eisel_lemire64 = 32
    _stack__atof_native = 136
    _stack__decimal_to_f64 = 80
    _stack__right_shift = 8
    _stack__left_shift = 24
    _stack__vsigned = 16
    _stack__vstring = 112
    _stack__vunsigned = 8
)

const (
    _entry__f32toa = 43296
    _entry__f64toa = 800
    _entry__format_significand = 46688
    _entry__format_integer = 3648
    _entry__fsm_exec = 22144
    _entry__advance_string = 18528
    _entry__advance_string_default = 48128
    _entry__do_skip_number = 25552
    _entry__get_by_path = 31776
    _entry__skip_one_fast = 27936
    _entry__html_escape = 11040
    _entry__i64toa = 4080
    _entry__u64toa = 4192
    _entry__lspace = 224
    _entry__quote = 5584
    _entry__skip_array = 21888
    _entry__skip_number = 27248
    _entry__skip_object = 24992
    _entry__skip_one = 27392
    _entry__unquote = 8368
    _entry__validate_one = 27440
    _entry__validate_utf8 = 39696
    _entry__validate_utf8_fast = 40656
    _entry__value = 16064
    _entry__vnumber = 19664
    _entry__atof_eisel_lemire64 = 13104
    _entry__atof_native = 15248
    _entry__decimal_to_f64 = 13536
    _entry__right_shift = 47648
    _entry__left_shift = 47152
    _entry__vsigned = 21216
    _entry__vstring = 18304
    _entry__vunsigned = 21536
)

const (
    _size__f32toa = 3392
    _size__f64toa = 2848
    _size__format_significand = 464
    _size__format_integer = 432
    _size__fsm_exec = 2300
    _size__advance_string = 1088
    _size__advance_string_default = 768
    _size__do_skip_number = 1360
    _size__get_by_path = 7920
    _size__skip_one_fast = 3144
    _size__html_escape = 2064
    _size__i64toa = 48
    _size__u64toa = 1248
    _size__lspace = 544
    _size__quote = 2736
    _size__skip_array = 64
    _size__skip_number = 144
    _size__skip_object = 48
    _size__skip_one = 48
    _size__unquote = 2480
    _size__validate_one = 48
    _size__validate_utf8 = 688
    _size__validate_utf8_fast = 2608
    _size__value = 1736
    _size__vnumber = 1552
    _size__atof_eisel_lemire64 = 368
    _size__atof_native = 624
    _size__decimal_to_f64 = 1712
    _size__right_shift = 416
    _size__left_shift = 496
    _size__vsigned = 320
    _size__vstring = 128
    _size__vunsigned = 336
)

var (
    _pcsp__f32toa = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {3351, 48},
        {3353, 40},
        {3355, 32},
        {3357, 24},
        {3359, 16},
        {3360, 8},
        {3363, 0},
        {3364, 48},
        {3392, 48},
    }
    _pcsp__f64toa = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {14, 48},
        {2792, 56},
        {2793, 48},
        {2795, 40},
        {2797, 32},
        {2799, 24},
        {2801, 16},
        {2802, 8},
        {2805, 0},
        {2806, 56},
        {2848, 56},
    }
    _pcsp__format_significand = [][2]uint32{
        {1, 0},
        {6, 8},
        {7, 16},
        {453, 24},
        {455, 16},
        {456, 8},
        {464, 0},
    }
    _pcsp__format_integer = [][2]uint32{
        {1, 0},
        {5, 8},
        {413, 16},
        {414, 8},
        {415, 16},
        {424, 16},
        {425, 8},
        {432, 0},
    }
    _pcsp__fsm_exec = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {1961, 88},
        {1962, 48},
        {1964, 40},
        {1966, 32},
        {1968, 24},
        {1970, 16},
        {1971, 8},
        {2300, 88},
    }
    _pcsp__advance_string = [][2]uint32{
        {15, 0},
        {20, 8},
        {22, 16},
        {24, 24},
        {26, 32},
        {27, 40},
        {28, 48},
        {437, 56},
        {438, 48},
        {440, 40},
        {442, 32},
        {444, 24},
        {446, 16},
        {447, 8},
        {1088, 56},
    }
    _pcsp__advance_string_default = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {333, 48},
        {335, 40},
        {337, 32},
        {339, 24},
        {341, 16},
        {342, 8},
        {768, 48},
    }
    _pcsp__do_skip_number = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {1275, 48},
        {1277, 40},
        {1279, 32},
        {1281, 24},
        {1283, 16},
        {1284, 8},
        {1360, 48},
    }
    _pcsp__get_by_path = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {7805, 88},
        {7806, 48},
        {7808, 40},
        {7810, 32},
        {7812, 24},
        {7814, 16},
        {7815, 8},
        {7920, 88},
    }
    _pcsp__skip_one_fast = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {20, 48},
        {1168, 176},
        {1170, 168},
        {1172, 160},
        {1174, 152},
        {1176, 144},
        {1177, 136},
        {3144, 176},
    }
    _pcsp__html_escape = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {2049, 72},
        {2050, 48},
        {2052, 40},
        {2054, 32},
        {2056, 24},
        {2058, 16},
        {2059, 8},
        {2064, 0},
    }
    _pcsp__i64toa = [][2]uint32{
        {15, 0},
        {35, 8},
        {48, 0},
    }
    _pcsp__u64toa = [][2]uint32{
        {1, 0},
        {163, 8},
        {459, 8},
        {760, 8},
        {1226, 8},
        {1248, 0},
    }
    _pcsp__lspace = [][2]uint32{
        {1, 0},
        {481, 8},
        {489, 8},
        {506, 8},
        {513, 8},
        {544, 0},
    }
    _pcsp__quote = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {14, 48},
        {2691, 56},
        {2692, 48},
        {2694, 40},
        {2696, 32},
        {2698, 24},
        {2700, 16},
        {2701, 8},
        {2736, 56},
    }
    _pcsp__skip_array = [][2]uint32{
        {1, 0},
        {29, 8},
        {64, 0},
    }
    _pcsp__skip_number = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {11, 32},
        {101, 40},
        {103, 32},
        {105, 24},
        {107, 16},
        {108, 8},
        {109, 40},
        {144, 40},
    }
    _pcsp__skip_object = [][2]uint32{
        {1, 0},
        {29, 8},
        {48, 0},
    }
    _pcsp__skip_one = [][2]uint32{
        {1, 0},
        {31, 8},
        {48, 0},
    }
    _pcsp__unquote = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {83, 72},
        {84, 48},
        {86, 40},
        {88, 32},
        {90, 24},
        {92, 16},
        {93, 8},
        {2480, 72},
    }
    _pcsp__validate_one = [][2]uint32{
        {1, 0},
        {36, 8},
        {48, 0},
    }
    _pcsp__validate_utf8 = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {11, 32},
        {12, 40},
        {627, 48},
        {628, 40},
        {630, 32},
        {632, 24},
        {634, 16},
        {635, 8},
        {688, 48},
    }
    _pcsp__validate_utf8_fast = [][2]uint32{
        {1, 0},
        {5, 8},
        {12, 16},
        {1739, 176},
        {1740, 168},
        {1743, 160},
        {1744, 176},
        {2019, 176},
        {2020, 168},
        {2608, 176},
    }
    _pcsp__value = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {886, 88},
        {887, 48},
        {889, 40},
        {891, 32},
        {893, 24},
        {895, 16},
        {896, 8},
        {1736, 88},
    }
    _pcsp__vnumber = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {17, 48},
        {807, 104},
        {808, 48},
        {810, 40},
        {812, 32},
        {814, 24},
        {816, 16},
        {817, 8},
        {1552, 104},
    }
    _pcsp__atof_eisel_lemire64 = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {9, 24},
        {293, 32},
        {295, 24},
        {297, 16},
        {298, 8},
        {368, 32},
    }
    _pcsp__atof_native = [][2]uint32{
        {1, 0},
        {8, 8},
        {591, 56},
        {592, 8},
        {624, 0},
    }
    _pcsp__decimal_to_f64 = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {12, 32},
        {13, 40},
        {14, 48},
        {1677, 56},
        {1678, 48},
        {1680, 40},
        {1682, 32},
        {1684, 24},
        {1686, 16},
        {1687, 8},
        {1712, 56},
    }
    _pcsp__right_shift = [][2]uint32{
        {1, 0},
        {320, 8},
        {389, 8},
        {397, 8},
        {416, 0},
    }
    _pcsp__left_shift = [][2]uint32{
        {1, 0},
        {6, 8},
        {7, 16},
        {364, 24},
        {366, 16},
        {367, 8},
        {471, 24},
        {473, 16},
        {474, 8},
        {496, 24},
    }
    _pcsp__vsigned = [][2]uint32{
        {1, 0},
        {5, 8},
        {113, 16},
        {114, 8},
        {115, 16},
        {126, 16},
        {127, 8},
        {261, 16},
        {262, 8},
        {267, 16},
        {268, 8},
        {269, 16},
        {307, 16},
        {308, 8},
        {309, 16},
        {317, 16},
        {318, 8},
        {320, 0},
    }
    _pcsp__vstring = [][2]uint32{
        {1, 0},
        {6, 8},
        {8, 16},
        {10, 24},
        {11, 32},
        {15, 40},
        {109, 56},
        {110, 40},
        {112, 32},
        {114, 24},
        {116, 16},
        {117, 8},
        {128, 0},
    }
    _pcsp__vunsigned = [][2]uint32{
        {1, 0},
        {73, 8},
        {84, 8},
        {109, 8},
        {275, 8},
        {313, 8},
        {321, 8},
        {336, 0},
    }
)
